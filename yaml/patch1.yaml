---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: demo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubewatch
  namespace: demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambassador-namespace-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: ambassador
  namespace: demo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubewatch-namespace-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: kubewatch
  namespace: demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ambassador
  template:
    metadata:
      labels:
        app: ambassador
    spec:
      serviceAccountName: ambassador
      securityContext:
        fsGroup: 2000
      containers:
      - name: ambassador
        image: quay.io/datawire/ambassador:3.2.0
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        lifecycle:
          postStart:
            exec:
              command: ["sh", "-c", "ulimit -n 65535"]
        volumeMounts:
        - name: ambassador-config
          mountPath: /ambassador-config
      volumes:
      - name: ambassador-config
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubewatch
  namespace: demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubewatch
  template:
    metadata:
      labels:
        app: kubewatch
    spec:
      serviceAccountName: kubewatch
      containers:
      - name: kubewatch
        image: bitnami/kubewatch:latest
        args:
          - --namespace=demo
          - --cluster-id=demo-cluster
        env:
          - name: KUBEWATCH_NAMESPACE
            value: demo
        resources: {}
