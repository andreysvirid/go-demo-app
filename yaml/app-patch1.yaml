apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: demo2

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ambassador-role
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ambassador-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador-role
subjects:
  - kind: ServiceAccount
    name: ambassador
    namespace: demo2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ambassador
  namespace: demo2
  labels:
    app: ambassador
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ambassador
  template:
    metadata:
      labels:
        app: ambassador
    spec:
      serviceAccountName: ambassador
      containers:
        - name: ambassador
          image: datawire/ambassador:2.0.0
          command: ["/bin/sh", "-c"]
          args:
            - "ulimit -n 65536 && exec ambassador"
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /ambassador/v0/check_alive
              port: 8877
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ambassador/v0/check_ready
              port: 8877
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            runAsUser: 8877
            runAsGroup: 8877
            allowPrivilegeEscalation: false
